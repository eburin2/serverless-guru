{"version":3,"sources":["Header.js","Blog.js","BlogPage.js","Photo.js","Photos.js","Home.js","Videos.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","alt","className","src","react_router_dom","exact","to","activeClassName","Blog","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","isLoaded","items","_this2","fetch","then","res","json","result","console","log","setState","slice","_this$state","message","map","item","key","guid","pathname","concat","link","title","thumbnail","React","Component","BlogPage","props","location","id","dangerouslySetInnerHTML","__html","content","Photo","image","name","Photos","photos","img","arr","n","Array","len","length","taken","RangeError","x","Math","floor","random","getRandom","photo","index","src_Photo","Home","Videos","width","height","allowFullScreen","frameBorder","App","src_Header","react_router","path","component","render","src_BlogPage","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qMA0BeA,EAvBA,WACb,OACIC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKC,IAAI,OAAOC,UAAU,OAAOC,IAAI,mJACrCL,EAAAC,EAAAC,cAAA,MAAIE,UAAU,0BAAd,mBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASC,OAAK,EAACC,GAAG,IAAIJ,UAAU,WAAWK,gBAAgB,mBAA3D,QAGAT,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASC,OAAK,EAACC,GAAG,QAAQJ,UAAU,WAAWK,gBAAgB,mBAA/D,QAGAT,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASC,OAAK,EAACC,GAAG,UAAUJ,UAAU,WAAWK,gBAAgB,mBAAjE,UAGAT,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASC,OAAK,EAACC,GAAG,QAAQJ,UAAU,WAAWK,gBAAgB,mBAA/D,gDCyDQC,cAtEhB,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,MAAO,IALGV,mFAWM,IAAAW,EAAAR,KAElBS,MAAM,uFAEHC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAEC,SAACG,GAECC,QAAQC,IAAIF,GACZL,EAAKQ,SAAS,CACZV,UAAU,EACVC,MAAOM,EAAON,MAAMU,MAAM,EAAG,MAGjC,SAACZ,GACCG,EAAKQ,SAAS,CACZV,UAAU,EACVD,6CAMD,IAAAa,EAC4BlB,KAAKI,MAAhCC,EADDa,EACCb,MAAiBE,GADlBW,EACQZ,SADRY,EACkBX,OAEtB,OADAO,QAAQC,IAAIf,KAAKI,MAAMG,OACnBF,EACKnB,EAAAC,EAAAC,cAAA,qBAAaiB,EAAMc,SAGtBjC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,+BACXJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAd,QACFJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAb,yFAEFJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACZiB,EAAMa,IAAI,SAACC,GACR,OAAOnC,EAAAC,EAAAC,cAAA,OAAKkC,IAAKD,EAAKE,KAAKN,MAAM,GAAI,IAAK3B,UAAU,sBACpDJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,GAAI,CACR8B,SAAQ,QAAAC,OAAUJ,EAAKK,KAAKT,MAAM,GAAI,MACtCb,MAAO,CACLiB,KAAMA,KAEPnC,EAAAC,EAAAC,cAAA,OAAKC,IAAKgC,EAAKM,MAClBpC,IAAK8B,EAAKO,UAAWtC,UAAU,wBAC/BJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAc+B,EAAKM,oBA5DrCE,IAAMC,WCiBVC,mLAdX,OADAjB,QAAQC,IAAIf,KAAKgC,MAAMC,UAErB/C,EAAAC,EAAAC,cAAA,QAAM8C,GAAG,QACPhD,EAAAC,EAAAC,cAAA,WAAS8C,GAAG,UAAU5C,UAAU,2BAC9BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAe6C,wBAAyB,CAACC,OAAQpC,KAAKgC,MAAMC,SAAS7B,MAAQJ,KAAKgC,MAAMC,SAAS7B,MAAMiB,KAAKgB,QAAU,8BAR5HP,aCURQ,EAXD,SAACN,GACb,OACI9C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKkC,IAAKU,EAAME,GAAI5C,UAAU,oBAAoBD,IAAI,UAAUE,IAAKyC,EAAMO,QAC3ErD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gBAAgB0C,EAAMQ,MACpCtD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAiB0C,EAAML,SC8F9Bc,oNAjFbrC,MAAQ,CACNsC,OAAQ,CACN,CACER,GAAI,EACJS,IAAK,0CACLH,KAAM,aACNb,MAAO,uCAET,CACEO,GAAI,EACJS,IAAK,0CACLH,KAAM,iBACNb,MAAO,mBAET,CACEO,GAAI,EACJS,IAAK,6CACLH,KAAM,mBACNb,MAAO,0BAET,CACEO,GAAI,EACJS,IAAK,2CACLH,KAAM,cACNb,MAAO,8BAET,CACEO,GAAI,EACJS,IAAK,2CACLH,KAAM,gBACNb,MAAO,wBAET,CACEO,GAAI,EACJS,IAAK,0CACLH,KAAM,aACNb,MAAO,qBAET,CACEO,GAAI,EACJS,IAAK,8CACLH,KAAM,iBACNb,MAAO,kBAET,CACEO,GAAI,EACJS,IAAK,8CACLH,KAAM,kBACNb,MAAO,YAET,CACEO,GAAI,EACJS,IAAK,0CACLH,KAAM,kBACNb,MAAO,iGASP,OA/EU,SAACiB,EAAKC,GACpB,IAAIhC,EAAS,IAAIiC,MAAMD,GACnBE,EAAMH,EAAII,OACVC,EAAQ,IAAIH,MAAMC,GACtB,GAAIF,EAAIE,EACJ,MAAM,IAAIG,WAAW,iDACzB,KAAOL,KAAK,CACR,IAAIM,EAAIC,KAAKC,MAAMD,KAAKE,SAAWP,GACnClC,EAAOgC,GAAKD,EAAIO,KAAKF,EAAQA,EAAME,GAAKA,GACxCF,EAAME,KAAOJ,KAAOE,EAAQA,EAAMF,GAAOA,EAE7C,OAAOlC,EAkEY0C,CAAUvD,KAAKI,MAAMsC,OAAQ,GAGnCtB,IAAI,SAACoC,EAAOC,GACjB,OACIvE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsE,EAAD,CACApC,IAAKkC,EAAMtB,GACXK,MAAOiB,EAAMb,IACbH,KAAMgB,EAAMhB,KACZb,MAAO6B,EAAM7B,kBAxEVE,IAAMC,YCPZ6B,EAVF,WACX,OACEzE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,KAAG8C,GAAG,yBAAN,qXCkBO0B,EAtBA,WACb,OACE1E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,+BACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,wBAAwBuE,MAAM,MAAMC,OAAO,MAAMnC,MAAM,2BAA2BpC,IAAI,4CAA4CwE,gBAAgB,SACpK7E,EAAAC,EAAAC,cAAA,UAAQE,UAAU,wBAAwB0E,YAAY,IAAIH,MAAM,MAAMC,OAAO,MAAMnC,MAAM,uBAAuBpC,IAAI,4CAA6CwE,gBAAgB,SACjL7E,EAAAC,EAAAC,cAAA,UAAQE,UAAU,wBAAwBuE,MAAM,MAAMC,OAAO,MAAMnC,MAAM,sBAAsBpC,IAAI,4CAA4CwE,gBAAgB,UAEjK7E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,+BACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,wBAAwBuE,MAAM,MAAMC,OAAO,MAAMnC,MAAM,wBAAwBpC,IAAI,4CAA4CwE,gBAAgB,SACjK7E,EAAAC,EAAAC,cAAA,UAAQE,UAAU,wBAAwBuE,MAAM,MAAMC,OAAO,MAAMnC,MAAM,uBAAuBpC,IAAI,4CAA4CwE,gBAAgB,SAChK7E,EAAAC,EAAAC,cAAA,UAAQE,UAAU,wBAAwBuE,MAAM,MAAMC,OAAO,MAAMnC,MAAM,4BAA4BpC,IAAI,4CAA4CwE,gBAAgB,UAEvK7E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,+BACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,wBAAwBuE,MAAM,MAAMC,OAAO,MAAMnC,MAAM,8CAA6CpC,IAAI,4CAA4CwE,gBAAgB,SACtL7E,EAAAC,EAAAC,cAAA,UAAQE,UAAU,wBAAwBuE,MAAM,MAAMC,OAAO,MAAMnC,MAAM,uCAAwCpC,IAAI,4CAA4CwE,gBAAgB,SACjL7E,EAAAC,EAAAC,cAAA,UAAQE,UAAU,wBAAwBuE,MAAM,MAAMC,OAAO,MAAMnC,MAAM,2CAA2CpC,IAAI,4CAA6CwE,gBAAgB,mBCa9KE,EArBH,WACN,OACE/E,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACbJ,EAAAC,EAAAC,cAAC8E,EAAD,OAEFhF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAW5B,KAE/BvD,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAO1E,OAAK,EAAC2E,KAAK,QAAQC,UAAWzE,IACrCV,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAO1E,OAAK,EAAC2E,KAAK,gBAAgBE,OAAQ,SAACtC,GAAD,OAC1C9C,EAAAC,EAAAC,cAACmF,EAAavC,MAEd9C,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWT,IACjC1E,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAOC,KAAK,IAAI3E,OAAK,EAAC4E,UAAWV,OCb3Ba,QACW,cAA7BC,OAAOxC,SAASyC,UAEe,UAA7BD,OAAOxC,SAASyC,UAEhBD,OAAOxC,SAASyC,SAASC,MACvB,2DCbNC,IAASN,OAAOpF,EAAAC,EAAAC,cAACyF,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxE,KAAK,SAAAyE,GACjCA,EAAaC","file":"static/js/main.d82831b7.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom'\n\nconst Header = () => {\n  return (\n      <header>\n        <img alt=\"logo\" className=\"logo\" src='https://media.licdn.com/dms/image/C560BAQHoPwd6kJCrGg/company-logo_200_200/0?e=2159024400&v=beta&t=kdtbL0qyZTqi1hxX6e0huRiKVvVSt_okB_Jm9qTTDsc'/>\n        <h1 className=\"header-serverless-guru\">Serverless Guru</h1>\n        <div className=\"flex\">\n          <NavLink exact to=\"/\" className=\"main-nav\" activeClassName=\"main-nav-active\">\n            Home\n          </NavLink>\n          <NavLink exact to=\"/blog\" className=\"main-nav\" activeClassName=\"main-nav-active\">\n            Blog\n          </NavLink>\n          <NavLink exact to=\"/videos\" className=\"main-nav\" activeClassName=\"main-nav-active\">\n            Videos\n          </NavLink>\n          <NavLink exact to=\"/team\" className=\"main-nav\" activeClassName=\"main-nav-active\">\n            Team\n          </NavLink>\n        </div>\n      </header>\n  )\n}\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Blog extends React.Component {\n  //Only place you can directly write to this.state in the constructor method\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n\n  //componentDidMount allows for adding objects to the array\n  componentDidMount() {\n    //fetch asynchronously load contents of the url\n    fetch(\"https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/serverlessguru\")\n    // res.json will just return the body as promise with json content\n      .then(res => res.json())\n      .then(\n         // call this function when the above chained Promise resolves\n        (result) => {\n          // this.setState function, which will accept an Object that will be eventually merged into Components current state.\n          console.log(result);\n          this.setState({\n            isLoaded: true,\n            items: result.items.slice(0, 9)\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n    }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n       console.log(this.state.items)\n       if (error) {\n         return <div>Error: {error.message}</div>;\n       } else {\n         return (\n             <section>\n               <div className=\"container\">\n                 <div className=\"section-header wow fadeInUp\">\n                     <h2 className=\"blog-title\">Blog</h2>\n                   <p className=\"text-center\">Exploring the unknown and helping elevate the entire community through written word.</p>\n                 </div>\n                 <div className=\"row wow fadeInUp\">\n                   {items.map((item) => {\n                       return <div key={item.guid.slice(21, 37)} className=\"col-md-4 col-sm-12\">\n                       <Link to={{\n                         pathname: `blog/${item.link.slice(34, 150)}`,\n                         state: {\n                           item: item\n                         }\n                       }}><img alt={item.title}\n                       src={item.thumbnail} className=\"img-fluid blog-img\"/></Link>\n                       <h6 className=\"blog-title\">{item.title}</h6>\n                       </div>\n                   })}\n                 </div>\n               </div>\n             </section>\n\n         );\n       }\n     }\n   }\n\n   export default Blog;\n","// Third Party\nimport React, { Component } from 'react';\n\n\nclass BlogPage extends Component {\n\n  render() {\n    console.log(this.props.location)\n    return (\n      <main id=\"main\">\n        <section id=\"contact\" className=\"section-bg wow fadeInUp\">\n          <div className=\"container\">\n            <div className=\"section-header\">\n              <div className=\"blog-content\" dangerouslySetInnerHTML={{__html: this.props.location.state ? this.props.location.state.item.content : \"<h3>nope</h3>\"}}></div>\n            </div>\n          </div>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default BlogPage;\n","import React from 'react';\n\nconst Photo = (props) => {\n  return (\n      <div>\n        <img key={props.id} className=\"profile img-fluid\" alt=\"profile\" src={props.image}/>\n        <h5 className=\"profile-name\">{props.name}</h5>\n        <h6 className=\"profile-title\">{props.title}</h6>\n      </div>\n\n  )\n}\n\nexport default Photo;\n","import React from 'react';\nimport Photo from './Photo';\nimport './App.css';\n\nconst getRandom = (arr, n) => {\n    let result = new Array(n),\n        len = arr.length,\n        taken = new Array(len);\n    if (n > len)\n        throw new RangeError(\"getRandom: more elements taken than available\");\n    while (n--) {\n        var x = Math.floor(Math.random() * len);\n        result[n] = arr[x in taken ? taken[x] : x];\n        taken[x] = --len in taken ? taken[len] : len;\n    }\n    return result;\n}\n\n\nclass Photos extends React.Component {\n  state = {\n    photos: [\n      {\n        id: 1,\n        img: 'https://serverlessguru.com/img/ryan.jpg',\n        name: 'Ryan Jones',\n        title: 'Founder(CEO) & Lead Cloud Developer'\n      },\n      {\n        id: 2,\n        img: 'https://serverlessguru.com/img/fim1.jpg',\n        name: 'Nadtakan Jones',\n        title: 'Cloud Developer'\n      },\n      {\n        id: 3,\n        img: 'https://serverlessguru.com/img/dallas.jpeg',\n        name: 'Dallas Slaughter',\n        title: 'Senior Cloud Architect'\n      },\n      {\n        id: 4,\n        img: 'https://serverlessguru.com/img/josh.jpeg',\n        name: 'Josh Linton',\n        title: 'Salesforce Cloud Developer'\n      },\n      {\n        id: 5,\n        img: 'https://serverlessguru.com/img/yann.jpeg',\n        name: 'Yann Stoneman',\n        title: 'Full Stack Developer'\n      },\n      {\n        id: 6,\n        img: 'https://serverlessguru.com/img/josh.jpg',\n        name: 'Josh Proto',\n        title: 'Digital Marketing'\n      },\n      {\n        id: 7,\n        img: 'https://serverlessguru.com/img/mikaela.jpeg',\n        name: 'Mikaela Shé',\n        title: 'Content Editor'\n      },\n      {\n        id: 8,\n        img: 'https://serverlessguru.com/img/victoria.jpg',\n        name: 'Victoria Chavez',\n        title: 'Designer'\n      },\n      {\n        id: 9,\n        img: 'https://serverlessguru.com/img/luke.png',\n        name: 'Luke Vandekieft',\n        title: 'Front End Developer'\n      }\n\n    ]\n  }\n\n      render() {\n        const photos = getRandom(this.state.photos, 9)\n\n        return (\n          photos.map((photo, index) => {\n            return (\n                <div>\n                  <Photo\n                  key={photo.id}\n                  image={photo.img}\n                  name={photo.name}\n                  title={photo.title}\n                  />\n                </div>\n\n            );\n          })\n        )\n      }\n    }\n\nexport default Photos;\n","import React from 'react';\n\nconst Home = () => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-12\">\n        <p id=\"about-serverless-guru\">We were founded on the idea that Serverless technologies and innovations will lay the foundation for the next 5-10 years in the software industry. We believe that everything that can be automated effectively should be automated. Our belief is automation and leveraging fully managed solutions will be the ONLY way software development is done at scale in the future.</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nconst Videos = () => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-4 col-lg-4 col-xs-12\">\n        <iframe className=\"vids embed-responsive\" width=\"200\" height=\"300\" title=\"serverless-warmup-plugin\" src=\"https://www.youtube.com/embed/1j7USsviHpg\" allowFullScreen=\"true\"></iframe>\n        <iframe className=\"vids embed-responsive\" frameBorder=\"0\" width=\"200\" height=\"300\" title=\"serverless-guru-show\" src=\"https://www.youtube.com/embed/m9bzh4pNMGI\"  allowFullScreen=\"true\"></iframe>\n        <iframe className=\"vids embed-responsive\" width=\"200\" height=\"300\" title=\"postman-api-testing\" src=\"https://www.youtube.com/embed/zytuGPzWtdU\" allowFullScreen=\"true\"></iframe>\n      </div>\n      <div className=\"col-md-4 col-lg-4 col-xs-12\">\n        <iframe className=\"vids embed-responsive\" width=\"200\" height=\"300\" title=\"create-support-ticket\" src=\"https://www.youtube.com/embed/XHHCRN-F8pk\" allowFullScreen=\"true\"></iframe>\n        <iframe className=\"vids embed-responsive\" width=\"200\" height=\"300\" title=\"tdd-serverless-mocha\" src=\"https://www.youtube.com/embed/briMjHzq_9U\" allowFullScreen=\"true\"></iframe>\n        <iframe className=\"vids embed-responsive\" width=\"200\" height=\"300\" title=\"serverless-intro-part-one\" src=\"https://www.youtube.com/embed/bMRVO4t4xGI\" allowFullScreen=\"true\"></iframe>\n      </div>\n      <div className=\"col-md-4 col-lg-4 col-xs-12\">\n        <iframe className=\"vids embed-responsive\" width=\"200\" height=\"300\" title=\"serverless-intro-part-two-dynamic-variables\"src=\"https://www.youtube.com/embed/i-UTHLo6wjQ\" allowFullScreen=\"true\"></iframe>\n        <iframe className=\"vids embed-responsive\" width=\"200\" height=\"300\" title=\"serverless-part-three-external-files\"  src=\"https://www.youtube.com/embed/BYMetFQ69OE\" allowFullScreen=\"true\"></iframe>\n        <iframe className=\"vids embed-responsive\" width=\"200\" height=\"300\" title=\"serverless-part-four-serverless-commands\" src=\"https://www.youtube.com/embed/py-N1nd1MG8\"  allowFullScreen=\"true\"></iframe>\n      </div>\n    </div>\n  );\n}\n\nexport default Videos;\n","import React from 'react';\nimport Header from './Header';\nimport Blog from './Blog';\nimport BlogPage from './BlogPage';\nimport Photos from './Photos';\nimport Home from './Home';\nimport Videos from './Videos';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n\nconst App = () => {\n      return (\n        <Router>\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-md-12 col-xs-12\">\n                <Header />\n              </div>\n              <Route path=\"/team\" component={Photos}/>\n            </div>\n              <Route exact path=\"/blog\" component={Blog}/>\n              <Route exact path=\"/blog/:blogId\" render={(props) =>\n              <BlogPage {...props} />\n              }/>\n              <Route path=\"/videos\" component={Videos}/>\n              <Route path=\"/\" exact component={Home}/>\n          </div>\n        </Router>\n      );\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}